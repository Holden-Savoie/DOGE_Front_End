{"version":3,"sources":["components/constants.js","components/Sidebar.js","components/Header.js","components/Dashboard.js","components/ToggleButton.js","components/Drinks.js","components/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["URL","custWhite","custRed","props","className","href","Header","useState","count","setCount","useEffect","countNotify","bellStyle","color","marginTop","marginLeft","fontSize","style","display","width","backgroundColor","textAlign","Sidebar","id","paddingBottom","margin","marginRight","overflow","to","Nav","Link","onClick","handleLogout","toggleShowNotify","cursor","position","text","indicateNotify","Dashboard","setUpdates","setShowNotify","axios","get","Constants","then","res","console","log","data","showNotify","CheckedIcon","UncheckedIcon","ToggleButton","toggle","setToggle","defaultChecked","onChange","disabled","getIcon","type","icons","undefined","defaultProps","toggleClasses","classNames","aria-label","checked","unchecked","Drinks","drinks","setContainers","containerHistory","setContainerHistory","showResult","setShowResult","search","setSearch","selectedFacilityTitle","setSelectedFacilityTitle","flaggedOnly","setFlaggedOnly","onChangeSearch","query","useHistory","getContainers","rowDataFunc","container","rowData","x","Object","values","length","pushRowData","rowDataSpecificFunc","findCommonElements2","push","facilityID","containerID","JSON","stringify","getContainerHistory","drawHistoryModal","isFacilityAlert","isFacility","i","down","k","filterList","q","list","escapeRegExp","s","replace","words","split","map","trim","filter","hasTrailingSpace","endsWith","searchRegex","RegExp","word","join","item","test","arr1","arr2","obj","j","findDiff","jsonContainer","jsonObject1","parse","jsonObject2","checkForNull","keys","key","createMenuOptions","optionsArr","value","modal","Modal","show","onHide","closeButton","Title","Body","Table","padding","pushModalData","contents","event","overflowWrap","substring","indexOf","timer","setInterval","clearInterval","Container","Row","Col","lg","md","float","e","placeholder","target","name","Accordion","defaultActiveKey","allContainers","facilitiesDown","displayFacility","Card","Toggle","as","variant","eventKey","Collapse","responsive","containerRows","size","gotSearchResults","oneDimArr","concat","finder","includes","containerRowsSpecific","Routes","notifications","toggleSetNotify","listNotify","notif","description","currentUser","post","viewNotification","borderBottom","setCurrentComponent","logout","sideBar","for","notifySideBar","zIndex","path","App","setLoggedIn","setCurrentUser","currentComponent","setCurrent","storage","localStorage","getItem","user","login","getInitialState","window","addEventListener","preventDefault","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb8d0e94.chunk.js","sourcesContent":["export const URL = \"http://tmcpages.com:8880/php/Library/rpc.php\";\nexport const imgPath = \"http://tmcpages.com:8880/php/Library/img/\";\nexport const stageStatus = ['Reported', 'Verified Send to Development', 'Resolved - Bug Not Replicated', 'Resolved - Bug fixed'];\nexport const custBlue = \"#3490dc\";\nexport const custWhite = \"whitesmoke\";\nexport const custRed = \"#ee9090\";\nexport const custGreen= \"#90ee90\";\n","import React from 'react';\nimport { elastic as Menu } from 'react-burger-menu';\n\nexport default props => {\n  return (\n    <Menu>\n      <a className=\"menu-item\" href=\"/home\">\n        Home\n      </a>\n      <a className=\"menu-item\" href=\"/drinks\">\n        Drinks\n      </a>\n    </Menu>\n  );\n};","\nimport React, { useState, useEffect } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { BsBellFill } from 'react-icons/bs';\nimport Sidebar from './Sidebar';\nimport '../styles/Sidebar.css';\nimport { Route } from 'react-router-dom';\nimport Routes from './Routes';\n\n\nexport default function Header(props) {\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        setCount(props.countNotify)\n    }, [props.countNotify]);\n\n    function indicateNotify() {\n        let style = {\n            fontSize: \"14px\",\n            color: \"white\"\n        }\n        let text = count;\n        if (count == 0) {\n            text = \"\";\n        }\n        return <p style={style}><b>{text}</b></p>;\n    }\n\n    let bellStyle = { color: \"red\", marginTop: \"4px\", marginLeft: \"-7px\", fontSize: \"32px\" };\n    if (count < 1) {\n        bellStyle = { color: \"white\", marginTop: \"4px\", marginLeft: \"-7px\", fontSize: \"32px\" };\n    }\n\n    function clickIcon() {\n        props.toggleShowNotify();\n    }\n\n    return (\n        <div style={{ display: \"flex\", width: \"100%\", backgroundColor: \"#3490dc\" }}>\n            <div style={{width: \"30%\", display: \"flex\", textAlign: \"center\" }}>\n                <Sidebar />\n            </div>\n            <div id={\"ctcTitle\"} style={{width: \"100%\", display: \"flex\", textAlign: \"center\", paddingBottom: \"5px\" }}>\n                <div style={{ width: \"80%\" }}>\n                    <h4 style={{ margin: \"auto\", marginRight: \"12%\", color: \"whitesmoke\", overflow: \"visible\" }}>My Bar</h4>\n                    <h6 style={{ margin: \"auto\", marginRight: \"10%\", color: \"whitesmoke\", overflow: \"visible\" }}><b>Current User: </b>bill</h6>\n                </div>\n                <div style={{marginLeft: \"auto\" }}>\n                    <div style={{ marginTop: \"7px\", display: \"flex\", textAlign: \"center\" }} >\n                        <LinkContainer to=\"/logout\" className={\"active navbar-brand\"} style={{color: \"whitesmoke\"}}>\n                            <Nav.Link id=\"logoutButton\" onClick={props.handleLogout}>Logout</Nav.Link>\n                        </LinkContainer>\n                    </div>\n                </div>\n                <div >\n                    <div style={{ marginTop: \"7px\", display: \"flex\", textAlign: \"center\", marginRight: \"2rem\", marginLeft: \"-5px\" }} onClick={() => clickIcon()}>\n                        <BsBellFill style={bellStyle} />\n                        <div style={{ cursor: \"pointer\", width: \"30px\", marginLeft: \"-6px\", marginTop: \"-8px\", position: \"absolute\" }}>\n                            {indicateNotify()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n} ","import React, { useEffect, useState } from 'react';\nimport {Container, Row, Col, Button, Modal} from 'react-bootstrap';\nimport * as Constants from './constants';\nimport axios from 'axios';\nimport ActivityType from './ActivityType';\nimport RecentItem from './RecentItem';\nexport default function Dashboard(props) {\n    const [updates, setUpdates] = useState();\n    const [showNotify, setShowNotify] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [details, setDetails] = useState(\"\");\n    useEffect(() => {\n        getRecentActivity();\n    }, []);\n\n    useEffect(() => {\n        setShowNotify(props.showNotify)\n    }, [props.showNotify]);\n\n    function getRecentActivity() {\n        axios.get(Constants.URL+`?action=recentUpdates`)\n            .then(res => {\n                console.log(res.data);\n                setUpdates(res.data);\n            })\n    }\n\n    function showRecentRollouts() {\n        let allUpdates = [];\n        if (updates) {\n            for(let i = 0; i < updates.length; i++) {\n                allUpdates.push(\n                    <Col sm><RecentItem update={updates[i]} seeDetails={(d) => seeDetails(d)} /></Col>\n                )\n            }\n        }\n        \n        return allUpdates;\n    }\n\n    function seeDetails(d) {\n        if (d) {\n            setDetails(d);\n            setShowModal(true);\n        } else {\n            setDetails(\"No Version Details Provided.\");\n            setShowModal(true);\n        }\n    }\n\n    function descriptModal() {\n        let modal = [];\n        modal.push(\n            <Modal size=\"lg\" show={showModal} onHide={() => setShowModal(false)} style={{textAlign: \"center\"}}>\n                <div>\n                    <p style={{whiteSpace: \"pre-line\"}}>{details}</p>\n                </div>\n            </Modal>\n        );\n\n        return modal;\n    }\n\n    // let logsButton = [];\n    // if (props.currentUser.super_user) {\n    //     logsButton.push(\n    //         <Button variant=\"primary\" style={{float: \"right\", backgroundColor: \"#3490dc\", height: \"35px\", fontSize: \"14px\"}}>\n    //             View Logs\n    //         </Button>\n    //     )\n    // }\n\n    return (\n        <div>\n           <h3>Bar Front Page</h3>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst CheckedIcon = () => <>🚩</>;\nconst UncheckedIcon = () => <>🌀</>;\n\nconst ToggleButton = ( props ) => {\n\n    const [toggle, setToggle] = useState(false);\n    const { defaultChecked, onChange, disabled, className } = props;\n\n    useEffect(() => {\n        if (defaultChecked) {\n            setToggle(defaultChecked)\n        }\n    }, [defaultChecked]);\n\n    const triggerToggle = () => {\n        if ( disabled ) {\n            return;\n        }\n\n        setToggle(!toggle);\n\n        if ( typeof onChange === 'function' ) {\n            onChange(!toggle);\n        }\n    }\n\n    const getIcon = (type) => {\n        const { icons } = props;\n        if ( ! icons ) {\n            return null;\n        }\n\n        return icons[type] === undefined ?\n            ToggleButton.defaultProps.icons[type] :\n            icons[type];\n    }\n\n    const toggleClasses = classNames('wrg-toggle', {\n        'wrg-toggle--checked': toggle,\n        'wrg-toggle--disabled': disabled\n    }, className);\n\n    return (\n        <div onClick={triggerToggle} className={toggleClasses}>\n            <div className=\"wrg-toggle-container\">\n                <div className=\"wrg-toggle-check\">\n                    <span>{ getIcon('checked') }</span>\n                </div>\n                <div className=\"wrg-toggle-uncheck\">\n                    <span>{ getIcon('unchecked') }</span>\n                </div>\n            </div>\n            <div className=\"wrg-toggle-circle\"></div>\n            <input type=\"checkbox\" aria-label=\"Toggle Button\" className=\"wrg-toggle-input\" />\n        </div>\n    );\n}\n\nToggleButton.defaultProps = {\n    icons: {\n        checked: <CheckedIcon />, \n        unchecked: <UncheckedIcon />\n    }\n};\n\nToggleButton.propTypes = {\n    disabled: PropTypes.bool,\n    defaultChecked: PropTypes.bool,\n    className: PropTypes.string,\n    onChange: PropTypes.func,\n    icons: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.shape({\n            checked: PropTypes.node,\n            unchecked: PropTypes.node\n        })\n    ])\n};\n\nexport default ToggleButton;","import React, { useState, useEffect, version } from 'react';\nimport axios from 'axios';\nimport SearchField from 'react-search-field';\n\nimport {\n    Modal,\n    Table,\n    Card,\n    Container,\n    Row,\n    Col,\n    Accordion\n} from 'react-bootstrap';\nimport * as Constants from './constants';\nimport '../styles/logStyles.css';\nimport { BiLoader } from \"react-icons/bi\";\nimport ToggleButton from './ToggleButton'\nimport { useHistory, Link } from 'react-router-dom';\n\nexport default function Drinks() {\n    const [drinks, setContainers] = useState();\n    const [containerHistory, setContainerHistory] = useState();\n    const [showResult, setShowResult] = useState(false);\n    const [search, setSearch] = useState('');\n    const [selectedFacilityTitle, setSelectedFacilityTitle] = useState('');\n    const [flaggedOnly, setFlaggedOnly] = useState(false);\n    const onChangeSearch = query => setSearch(query);\n    const history = useHistory();\n\n    useEffect(() => {\n        getContainers();\n        let timer = setInterval(() => getContainers(), 60000);\n        return function cleanup() {\n            clearInterval(timer);\n        }\n    }, []);\n\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Population Methods\">\n    //Populates all facilities and drinks\n    function containerRows() {\n        let allContainers = [];\n        let facilitiesDown = isFacilityAlert();\n        for (let x = 0; x < drinks.length; x++) {\n            let rowData = rowDataFunc(drinks[x]);\n            let displayFacility = drinks[x][\"facility_info\"][\"facility_name\"] + ' - ' + drinks[x][\"facility_info\"][\"facility_id\"];\n            let style = { backgroundColor: Constants.custWhite, cursor: \"pointer\" };\n\n            if (flaggedOnly && !facilitiesDown[x]) { \n                continue; \n            }\n\n            if (facilitiesDown[x]) {\n                style = { backgroundColor: Constants.custRed, cursor: \"pointer\" }\n            }\n            allContainers.push(\n                <Card>\n                    <Card.Header>\n                        <div style={style}>\n                            <Accordion.Toggle as={Card.Header} variant={\"Button\"} eventKey={x + 1}>\n                                {displayFacility}\n                            </Accordion.Toggle>\n                        </div>\n                        <Accordion.Collapse eventKey={x + 1}>\n                            <Card.Body>\n                                <Table responsive>\n                                    <tbody>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Version</th>\n                                            {/*<th>Running</th>*/}\n                                            <th>Created</th>\n                                        </tr>\n                                        {rowData}\n                                    </tbody>\n                                </Table>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card.Header>\n                </Card>\n            );\n        }\n        return allContainers;\n    }\n\n    //Populates specified facility and container(s)\n    function containerRowsSpecific() {\n        let allContainers = [];\n        let gotSearchResults = false;\n        let facilitiesDown = isFacilityAlert();\n        for (let x = 0; x < drinks.length; x++) {\n            let displayFacility = drinks[x][\"facility_info\"][\"facility_name\"] + ' - ' + drinks[x][\"facility_info\"][\"facility_id\"];\n            let style = { backgroundColor: Constants.custWhite, cursor: \"pointer\" };\n            let active = 1;\n            let rowData = rowDataFunc(drinks[x]);\n\n            if (selectedFacilityTitle !== \"\" && selectedFacilityTitle !== displayFacility) {\n                //one result, active stays as 1\n                continue;\n            }\n\n            if (flaggedOnly && !facilitiesDown[x]) { \n                continue; \n            }\n\n            if (facilitiesDown[x]) {\n                style = { backgroundColor: Constants.custRed, cursor: \"pointer\" }\n            }\n\n            if (search !== \"\") {\n                let oneDimArr = [];\n                for (let i = 0; i < Object.values(drinks[x]).length - 1; i++) {\n                    oneDimArr = oneDimArr.concat(drinks[x][i]);\n                }\n\n                let finder = filterList(search, oneDimArr)\n                if (finder.length > 0 && !finder.includes(null) && !finder.includes(undefined)) {\n                    rowData = rowDataSpecificFunc(drinks[x], finder);\n                    gotSearchResults = true;\n                    //active == 1 ? active = 1 : active++;\n                } else {\n                    //active == 1 ? active = 1 : active--;\n                    continue;\n                }\n            }\n\n            allContainers.push(\n                <Accordion defaultActiveKey={active} >\n                    <Card>\n                        <Card.Header>\n                            <div style={style}>\n                                <Accordion.Toggle as={Card.Header} variant={\"Button\"} eventKey={active}>\n                                    {displayFacility}\n                                </Accordion.Toggle>\n                            </div>\n                            <Accordion.Collapse eventKey={active}>\n                                <Card.Body>\n                                    <Table responsive>\n                                        <tbody id={x + 1}>\n                                            <tr>\n                                                <th>Name</th>\n                                                <th>Version</th>\n                                                {/*<th>Running</th>*/}\n                                                <th>Created</th>\n                                            </tr>\n                                            {rowData}\n                                        </tbody>\n                                    </Table>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card.Header>\n                    </Card>\n                </Accordion>\n            );\n        }\n        if (!gotSearchResults && search !== \"\") {\n            allContainers.push(\"No Results Found\")\n        }\n        return allContainers;\n    }\n\n    //</editor-fold>\n\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Helper Methods\">\n\n    //Returns multi-dimension array as Drinks[Container[\n    // Item0[\"test\", \"1.2\", \"false\", \"2 days ago\"], Item0[\"test2\", \"1.3\", \"true\", \"3 days ago\"],\n    // facility_info[\"facility_id\":\"3186291\", \"facility_name\":\"zCTCFacility\"]]]\n    function getContainers() {\n        axios.get(Constants.URL + `?action=viewAllContainers`)\n            .then(res => {\n                console.log(res);\n                setContainers(res.data);\n            })\n    }\n\n    function getContainerHistory(facilityID, container) {\n        let data = { facilityID: facilityID, containerID: container[4] }\n        axios.get(Constants.URL + `?action=getContainerHistory&data=` + JSON.stringify(data))\n            .then(res => {\n                console.log(res);\n                res.data[0][4] = container[0]\n                res.data[0][5] = container[1]\n                console.log(\"here: \")\n                console.log(res.data)\n                setContainerHistory(res.data)\n            })\n    }\n\n    function rowDataFunc(container) {\n        let rowData = [];\n        for (let x = 0; x < Object.values(container).length - 1; x++) {\n            pushRowData(container, x, rowData);\n        }\n        return rowData;\n    }\n\n    function rowDataSpecificFunc(container, data) {\n        let rowData = [];\n        for (let x = 0; x < Object.values(container).length - 1; x++) {\n            if (!findCommonElements2(data, container[x])) {\n                continue;\n            }\n            pushRowData(container, x, rowData);\n        }\n        return rowData;\n    }\n\n    function pushRowData(container, x, rowData) {\n\n        let style = { cursor: \"pointer\" };\n        if (container[x][2] === \"f\") {\n            style = { backgroundColor: Constants.custRed, cursor: \"pointer\" };\n        }\n\n        rowData.push(\n            <tr style={style} onClick={() => {\n                setShowResult(true);\n                getContainerHistory(container[\"facility_info\"][\"facility_id\"], container[x]);\n                drawHistoryModal()\n            }}>\n                <td>{container[x][0]}</td>\n                <td>{container[x][1]}</td>\n                {/*<td>{container[x][2]}</td>*/}\n                <td>{container[x][3]}</td>\n            </tr>\n        )\n        return rowData\n    }\n\n    function isFacilityAlert() {\n        let isFacility = [];\n        for (let i = 0; i < drinks.length; i++) {\n            let down = false;\n            for (let k = 0; k < Object.values(drinks[i]).length - 1; k++) {\n                if (drinks[i][k][2] === 'f') {\n                    down = true;\n                }\n            }\n            isFacility.push(down);\n        }\n        return isFacility;\n    }\n\n    //Search Bar Algo\n    function filterList(q, list) {\n        function escapeRegExp(s) {\n            return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        }\n\n        const words = q\n            .split(/\\s+/g)\n            .map(s => s.trim())\n            .filter(s => !!s);\n\n        const hasTrailingSpace = q.endsWith(\" \");\n        const searchRegex = new RegExp(\n            words\n                .map((word, i) => {\n                    if (i + 1 == words.length && !hasTrailingSpace) {\n                        // The last word - ok with the word being \"startswith\"-like\n                        return `(?=.*\\\\b\\\\w*${escapeRegExp(word)})`;\n                    } else {\n                        // Not the last word - expect the whole word exactly\n                        return `(?=.*\\\\b\\\\w*${escapeRegExp(word)}\\\\b)`;\n                    }\n                })\n                .join(\"\") + \".+\",\n            \"gi\"\n        );\n        return list.filter(item => {\n            return searchRegex.test(item);\n        });\n\n    }\n\n    function findCommonElements2(arr1, arr2) {\n        // Create an empty object\n        let obj = {};\n\n        // Loop through the first array\n        for (let i = 0; i < arr1.length; i++) {\n\n            // Check if element from first array\n            // already exist in object or not\n            if (!obj[arr1[i]]) {\n\n                // If it doesnt exist assign the\n                // properties equals to the\n                // elements in the array\n                const element = arr1[i];\n                obj[element] = true;\n            }\n        }\n\n        // Loop through the second array\n        for (let j = 0; j < arr2.length; j++) {\n\n            // Check elements from second array exist\n            // in the created object or not\n            if (obj[arr2[j]]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function findDiff(jsonContainer) {\n        let jsonObject1 = JSON.parse(jsonContainer[2]);\n        let jsonObject2 = JSON.parse(jsonContainer[3]);\n\n        if (jsonObject1 == null) { //INSERT\n            return (checkForNull(jsonContainer[4]) + \" (Version: \" + checkForNull(jsonContainer[5]) + \")\" +\n                \"\\nRunning = \" + checkForNull(jsonObject2[\"running\"]));\n        }\n        if (jsonObject2 == null) { //DELETE\n            return (checkForNull(jsonContainer[4]) + \" (Version: \" + checkForNull(jsonContainer[5]) + \")\" +\n                \"\\nRunning = \" + checkForNull(jsonObject2[\"running\"]));\n        }\n        let keys = Object.keys(jsonObject1);\n        for (let i = 0; i < keys.length; i++) { //UPDATE\n            let key = keys[i];\n            if (jsonObject1[key] !== jsonObject2[key]) {\n                if (jsonObject1[key] == true && jsonObject2[key] == false) {\n                    return (\"Container Stopped Running\");\n                }\n                else if (jsonObject1[key] == false && jsonObject2[key] == true) {\n                    return (\"Container Started Running\");\n                }\n                return (key + \" changed from \" + checkForNull(jsonObject1[key]) + \" to \" + checkForNull(jsonObject2[key]));\n            }\n        }\n    }\n\n    function checkForNull(obj) {\n        if (obj == null) {\n            return \"N/A\"\n        }\n        else { return JSON.stringify(obj) }\n    }\n\n    //Dynamically fill the drop down menu\n    function createMenuOptions() {\n        let optionsArr = [];\n        optionsArr.push(\n            <option value={\"\"}>\n                Not Set\n            </option>\n        );\n        for (let x = 0; x < drinks.length; x++) {\n            optionsArr.push(\n                <option\n                    value={drinks[x][\"facility_info\"][\"facility_name\"] + ' - ' + drinks[x][\"facility_info\"][\"facility_id\"]}>\n                    {drinks[x][\"facility_info\"][\"facility_name\"] + ' - ' + drinks[x][\"facility_info\"][\"facility_id\"]}\n                </option>\n            );\n        }\n        return optionsArr\n    }\n\n    function handleCloseResult() {\n        setShowResult(false);\n    }\n\n    function drawHistoryModal() {\n        let modal = [];\n\n        modal.push(\n            <Modal show={showResult} onHide={() => handleCloseResult()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Container History</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div>\n                        <Table style={{ margin: \"auto\", width: \"90%\" }}>\n                            <thead>\n                                <tr style={{ backgroundColor: \"#3490dc\", padding: \"5rem\" }}>\n                                    <th style={{ color: \"#fff\" }}><p>Event</p></th>\n                                    <th style={{ color: \"#fff\", }}><p>Action</p></th>\n                                    <th style={{ color: \"#fff\", }}><p>Date</p></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {pushModalData()}\n                            </tbody>\n                        </Table>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n\n        return modal;\n    }\n\n\n\n    function pushModalData() {\n        if (containerHistory == null || Object.values(containerHistory).length <= 0) {\n            return (<tr>No History</tr>);\n        }\n        let contents = [];\n\n        for (let i = 0; i < Object.values(containerHistory).length; i++) {\n            let event = containerHistory[i][1];\n            if (containerHistory[i][1] === \"INSERT\") {\n                event = \"ADDED\"\n            }\n            if (containerHistory[i][1] === \"DELETE\") {\n                event = \"REMOVED\"\n            }\n            contents.push(\n                <tr key={i}>\n                    <td>{event}</td>\n                    <td style={{ overflowWrap: \"break-word\" }}>{findDiff(containerHistory[i])}</td>\n                    <td>{containerHistory[i][0].substring(0, containerHistory[i][0].indexOf(\".\"))}</td>\n                </tr>\n            );\n        }\n        return contents\n    }\n\n    function handleTaskView(url) {\n        console.log(url);\n        console.log(history);\n        history.push(url);\n    }\n\n    // </editor-fold>\n\n    if (drinks && search === \"\" && selectedFacilityTitle === \"\") {\n        return (\n            <Container>\n                <Row>\n                    <Col lg={\"5\"}>\n                        <h3>Container Status</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={\"8\"}>\n                        <div style={{width: \"fit-content\", float: \"left\"}}>\n                        <label>\n                            Flagged Only\n                        </label>\n                        <br />\n                        <ToggleButton onChange={(e) => setFlaggedOnly(e)} />\n                        </div>\n                        <SearchField\n                            placeholder=\"Search\"\n                            value={search}\n                            onChange={onChangeSearch}\n                        />\n                    </Col>\n                    \n                    <Col md={\"1\"}>\n                    </Col>\n\n                    <Col md={\"3\"}>\n                        <select onChange={(e) => setSelectedFacilityTitle(e.target.value)}\n                            name=\"FacilityID\" value={selectedFacilityTitle}>\n                            {createMenuOptions()}\n                        </select>\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col lg={\"12\"}>\n                        <Accordion defaultActiveKey={0}>\n                            {containerRows()}\n                            {drawHistoryModal()}\n                        </Accordion>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    } else if (drinks && (search !== \"\" || selectedFacilityTitle !== \"\")) {\n        return (\n            <Container>\n            <Row>\n                <Col lg={\"5\"}>\n                    <h3>Container Status</h3>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={\"8\"}>\n                    <div style={{width: \"fit-content\", float: \"left\"}}>\n                    <label>\n                        Flagged Only\n                    </label>\n                    <br />\n                    <ToggleButton onChange={(e) => setFlaggedOnly(e)} />\n                    </div>\n                    <SearchField\n                        placeholder=\"Search\"\n                        value={search}\n                        onChange={onChangeSearch}\n                    />\n                </Col>\n                \n                <Col md={\"1\"}>\n                </Col>\n\n                <Col md={\"3\"}>\n                    <select onChange={(e) => setSelectedFacilityTitle(e.target.value)}\n                        name=\"FacilityID\" value={selectedFacilityTitle}>\n                        {createMenuOptions()}\n                    </select>\n                </Col>\n            </Row>\n            <br />\n            <Row>\n                <Col lg={\"12\"}>\n                    <Accordion defaultActiveKey={0}>\n                        {containerRowsSpecific()}\n                        {drawHistoryModal()}\n                    </Accordion>\n                </Col>\n            </Row>\n        </Container>\n        )\n    } else {\n        return (\n            <Container>\n                <div id=\"loadingDiv\" style={{ textAlign: \"center\", marginTop: \"15%\" }}>\n                    <BiLoader size=\"250px\" color=\"3498FF\" />\n                </div>\n            </Container>\n        );\n    }\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Modal } from 'react-bootstrap';\nimport * as Constants from './constants';\nimport axios from 'axios';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport Drinks from \"./Drinks\";\n\n\nexport default function Routes(props) {\n    const [showNotify, setShowNotify] = useState(false);\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        props.setCurrentComponent();\n      }, []);\n\n\n\n    function viewNotification(id) {\n        let data = {\n            id: id\n        }\n        data = JSON.stringify(data);\n        axios.post(Constants.URL + `?action=viewNotify`, data)\n            .then(res => {\n                // getNotifications();\n            })\n    }\n\n    function handleLogout() {\n        props.logout();\n      }\n\n    function toggleSetNotify() {\n        setShowNotify(!showNotify);\n    }\n\n    function hideModal() {\n        setShowNotify(false);\n        //props.toggleShowNotify();\n    }\n\n    function notifySideBar() {\n        let sideBar = [];\n        if (showNotify) {\n            sideBar.push(\n                    <label className=\"mainFocus\" onClick={() => toggleSetNotify()} for=\"btnControl\"></label>\n            );\n            if (notifications.length > 0) {\n                sideBar.push(\n                    <div className=\"notifySide\" style={{backgroundColor: \"whitesmoke\"}}> \n                        {listNotify()}\n                    </div>\n                );\n            } else {\n                sideBar.push(\n                    <div className=\"notifySide\" style={{backgroundColor: \"whitesmoke\"}}> \n                        <p>No Notifications</p>\n                    </div>\n                    \n                )\n            }\n        } else {\n            sideBar = [];\n        }\n        \n        return sideBar;\n    }\n    function listNotify() {\n        let notif = [];\n        for(let i = 0; i < notifications.length; i++) {\n            if (!notifications[i].description.includes(props.currentUser.name)) {\n                notif.push(\n                    <div onClick={() => viewNotification(notifications[i].id)} style={{borderBottom: \"1px groove\"}}>\n                        <p>{notifications[i].description}</p>\n                    </div>\n                )\n            }\n        }\n        return notif;\n    }\n\n    function countNotify() {\n        let count = 0;\n        for(let i = 0; i < notifications.length; i++) {\n            if (!notifications[i].description.includes(props.currentUser.name)) {\n                count++;\n            }\n        }\n        return count\n    }\n      \n    return (\n        <div>\n            <div>\n                <Router>\n                    <Header countNotify={countNotify()} showNotify={showNotify} toggleShowNotify={() => toggleSetNotify()} currentUser={props.currentUser} handleLogout={() => handleLogout()} />\n                    <div>\n                        {notifySideBar()}\n                    </div>\n                    <Switch style={{zIndex: \"9\"}}>\n                        <Route path=\"/logout\">\n                            <Redirect to=\"/\" />\n                        </Route>\n                        <Route path=\"/drinks\">\n                            <Drinks />\n                        </Route>\n                        <Route path=\"/\">\n                            <Dashboard showNotify={showNotify} toggleShowNotify={() => toggleSetNotify()} currentUser={props.currentUser} />\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>    \n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './components/Routes';\nimport Login from './components/Login';\nexport default function App() {\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState();\n  const [currentComponent, setCurrent] = useState('Login');\n\n  useEffect(() => {\n    getInitialState()\n  }, []);\n\n  window.addEventListener('beforeunload', (event) => {\n    // Cancel the event as stated by the standard.\n    event.preventDefault();\n    \n    // Chrome requires returnValue to be set.\n      setLocalStorage();\n    });\n\n  function setLocalStorage() { \n      if (currentComponent === 'Login') {\n        localStorage.setItem('currentUser', JSON.stringify(''));\n      } else {\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n      }\n  }\n\n  function getInitialState() {\n      let storage = localStorage.getItem('currentUser');\n      console.log(storage);\n      console.log(typeof storage);\n      if (storage !== 'undefined' && storage) {\n        console.log(\"firing\");\n        let user = JSON.parse(storage);\n        setCurrentUser(user);\n        setLoggedIn(user.login)\n      }\n      \n  }\n\n  function clearLocalStorage() {\n    localStorage.clear();\n  }\n\n  function Logout() {\n    setCurrent('Login')\n    setLoggedIn(false);\n    localStorage.setItem('currentUser')\n    window.removeEventListener(\"beforeunload\", clearLocalStorage());\n    \n  \n}\n\n  function userLogin(user) {\n    setCurrent('Routes');\n    setCurrentUser(user);\n    setLoggedIn(user.login);\n  }\n\n  function setRoutes() {\n    setCurrent('Routes');\n  }\n  // if (loggedIn) {\n      return (\n          // <Routes setCurrentComponent={() => setRoutes()} currentUser={currentUser} logout={() => Logout()} />\n          <Routes setCurrentComponent={() => setRoutes()} />\n      );\n  // } else {\n  //   return (\n  //     <Login userLogin={(user) => userLogin(user)} />\n  //   );\n  // }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}