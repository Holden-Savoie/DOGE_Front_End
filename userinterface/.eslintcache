[{"C:\\Users\\micha\\myBar\\userinterface\\src\\index.js":"1","C:\\Users\\micha\\myBar\\userinterface\\src\\reportWebVitals.js":"2","C:\\Users\\micha\\myBar\\userinterface\\src\\App.js":"3","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Login.js":"4","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Routes.js":"5","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\constants.js":"6","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Header.js":"7","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Dashboard.js":"8","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Sidebar.js":"9","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\ActivityType.js":"10","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\ToggleButton.js":"11","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\TicketTile.js":"12","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Drinks.js":"13","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\index.js":"14","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\reportWebVitals.js":"15","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\App.js":"16","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\Routes.js":"17","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\constants.js":"18","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\Dashboard.js":"19","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\Drinks.js":"20","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\ToggleButton.js":"21"},{"size":517,"mtime":1613693522087,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1613693522088,"results":"24","hashOfConfig":"23"},{"size":2073,"mtime":1613693522075,"results":"25","hashOfConfig":"23"},{"size":2182,"mtime":1613693522079,"results":"26","hashOfConfig":"23"},{"size":3796,"mtime":1618182645425,"results":"27","hashOfConfig":"23"},{"size":411,"mtime":1613693522085,"results":"28","hashOfConfig":"23"},{"size":2830,"mtime":1618181395982,"results":"29","hashOfConfig":"23"},{"size":1770,"mtime":1618182519956,"results":"30","hashOfConfig":"23"},{"size":304,"mtime":1618182645424,"results":"31","hashOfConfig":"23"},{"size":2786,"mtime":1613693522076,"results":"32","hashOfConfig":"23"},{"size":2264,"mtime":1613693522084,"results":"33","hashOfConfig":"23"},{"size":3156,"mtime":1613693522083,"results":"34","hashOfConfig":"23"},{"size":17188,"mtime":1618184827547,"results":"35","hashOfConfig":"23"},{"size":517,"mtime":1613693522087,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1613693522088,"results":"38","hashOfConfig":"37"},{"size":224,"mtime":1621197720211,"results":"39","hashOfConfig":"37"},{"size":816,"mtime":1621198015921,"results":"40","hashOfConfig":"37"},{"size":137,"mtime":1621198167075,"results":"41","hashOfConfig":"37"},{"size":217,"mtime":1621197890735,"results":"42","hashOfConfig":"37"},{"size":17151,"mtime":1621198161758,"results":"43","hashOfConfig":"37"},{"size":2264,"mtime":1613693522084,"results":"44","hashOfConfig":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1jcql9b",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"17q14bj",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\Users\\micha\\myBar\\userinterface\\src\\index.js",[],["97","98"],"C:\\Users\\micha\\myBar\\userinterface\\src\\reportWebVitals.js",[],"C:\\Users\\micha\\myBar\\userinterface\\src\\App.js",["99","100","101","102"],"import React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Routes from './components/Routes';\r\nimport Login from './components/Login';\r\nexport default function App() {\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [currentComponent, setCurrent] = useState('Login');\r\n\r\n  useEffect(() => {\r\n    getInitialState()\r\n  }, []);\r\n\r\n  window.addEventListener('beforeunload', (event) => {\r\n    // Cancel the event as stated by the standard.\r\n    event.preventDefault();\r\n    \r\n    // Chrome requires returnValue to be set.\r\n      setLocalStorage();\r\n    });\r\n\r\n  function setLocalStorage() { \r\n      if (currentComponent === 'Login') {\r\n        localStorage.setItem('currentUser', JSON.stringify(''));\r\n      } else {\r\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n      }\r\n  }\r\n\r\n  function getInitialState() {\r\n      let storage = localStorage.getItem('currentUser');\r\n      console.log(storage);\r\n      console.log(typeof storage);\r\n      if (storage !== 'undefined' && storage) {\r\n        console.log(\"firing\");\r\n        let user = JSON.parse(storage);\r\n        setCurrentUser(user);\r\n        setLoggedIn(user.login)\r\n      }\r\n      \r\n  }\r\n\r\n  function clearLocalStorage() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  function Logout() {\r\n    setCurrent('Login')\r\n    setLoggedIn(false);\r\n    localStorage.setItem('currentUser')\r\n    window.removeEventListener(\"beforeunload\", clearLocalStorage());\r\n    \r\n  \r\n}\r\n\r\n  function userLogin(user) {\r\n    setCurrent('Routes');\r\n    setCurrentUser(user);\r\n    setLoggedIn(user.login);\r\n  }\r\n\r\n  function setRoutes() {\r\n    setCurrent('Routes');\r\n  }\r\n  // if (loggedIn) {\r\n      return (\r\n          // <Routes setCurrentComponent={() => setRoutes()} currentUser={currentUser} logout={() => Logout()} />\r\n          <Routes setCurrentComponent={() => setRoutes()} />\r\n      );\r\n  // } else {\r\n  //   return (\r\n  //     <Login userLogin={(user) => userLogin(user)} />\r\n  //   );\r\n  // }\r\n}\r\n\r\n\r\n","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Login.js",[],"C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Routes.js",["103","104","105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport * as Constants from './constants';\r\nimport axios from 'axios';\r\nimport Header from './Header';\r\nimport Dashboard from './Dashboard';\r\nimport Drinks from \"./Drinks\";\r\n\r\n\r\nexport default function Routes(props) {\r\n    const [showNotify, setShowNotify] = useState(false);\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        props.setCurrentComponent();\r\n      }, []);\r\n\r\n\r\n\r\n    function viewNotification(id) {\r\n        let data = {\r\n            id: id\r\n        }\r\n        data = JSON.stringify(data);\r\n        axios.post(Constants.URL + `?action=viewNotify`, data)\r\n            .then(res => {\r\n                // getNotifications();\r\n            })\r\n    }\r\n\r\n    function handleLogout() {\r\n        props.logout();\r\n      }\r\n\r\n    function toggleSetNotify() {\r\n        setShowNotify(!showNotify);\r\n    }\r\n\r\n    function hideModal() {\r\n        setShowNotify(false);\r\n        //props.toggleShowNotify();\r\n    }\r\n\r\n    function notifySideBar() {\r\n        let sideBar = [];\r\n        if (showNotify) {\r\n            sideBar.push(\r\n                    <label className=\"mainFocus\" onClick={() => toggleSetNotify()} for=\"btnControl\"></label>\r\n            );\r\n            if (notifications.length > 0) {\r\n                sideBar.push(\r\n                    <div className=\"notifySide\" style={{backgroundColor: \"whitesmoke\"}}> \r\n                        {listNotify()}\r\n                    </div>\r\n                );\r\n            } else {\r\n                sideBar.push(\r\n                    <div className=\"notifySide\" style={{backgroundColor: \"whitesmoke\"}}> \r\n                        <p>No Notifications</p>\r\n                    </div>\r\n                    \r\n                )\r\n            }\r\n        } else {\r\n            sideBar = [];\r\n        }\r\n        \r\n        return sideBar;\r\n    }\r\n    function listNotify() {\r\n        let notif = [];\r\n        for(let i = 0; i < notifications.length; i++) {\r\n            if (!notifications[i].description.includes(props.currentUser.name)) {\r\n                notif.push(\r\n                    <div onClick={() => viewNotification(notifications[i].id)} style={{borderBottom: \"1px groove\"}}>\r\n                        <p>{notifications[i].description}</p>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return notif;\r\n    }\r\n\r\n    function countNotify() {\r\n        let count = 0;\r\n        for(let i = 0; i < notifications.length; i++) {\r\n            if (!notifications[i].description.includes(props.currentUser.name)) {\r\n                count++;\r\n            }\r\n        }\r\n        return count\r\n    }\r\n      \r\n    return (\r\n        <div>\r\n            <div>\r\n                <Router>\r\n                    <Header countNotify={countNotify()} showNotify={showNotify} toggleShowNotify={() => toggleSetNotify()} currentUser={props.currentUser} handleLogout={() => handleLogout()} />\r\n                    <div>\r\n                        {notifySideBar()}\r\n                    </div>\r\n                    <Switch style={{zIndex: \"9\"}}>\r\n                        <Route path=\"/logout\">\r\n                            <Redirect to=\"/\" />\r\n                        </Route>\r\n                        <Route path=\"/drinks\">\r\n                            <Drinks />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <Dashboard showNotify={showNotify} toggleShowNotify={() => toggleSetNotify()} currentUser={props.currentUser} />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </div>    \r\n        </div>\r\n    )\r\n}","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\constants.js",[],"C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Header.js",["107","108","109","110"],"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { BsBellFill } from 'react-icons/bs';\r\nimport Sidebar from './Sidebar';\r\nimport '../styles/Sidebar.css';\r\nimport { Route } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\n\r\nexport default function Header(props) {\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setCount(props.countNotify)\r\n    }, [props.countNotify]);\r\n\r\n    function indicateNotify() {\r\n        let style = {\r\n            fontSize: \"14px\",\r\n            color: \"white\"\r\n        }\r\n        let text = count;\r\n        if (count == 0) {\r\n            text = \"\";\r\n        }\r\n        return <p style={style}><b>{text}</b></p>;\r\n    }\r\n\r\n    let bellStyle = { color: \"red\", marginTop: \"4px\", marginLeft: \"-7px\", fontSize: \"32px\" };\r\n    if (count < 1) {\r\n        bellStyle = { color: \"white\", marginTop: \"4px\", marginLeft: \"-7px\", fontSize: \"32px\" };\r\n    }\r\n\r\n    function clickIcon() {\r\n        props.toggleShowNotify();\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", width: \"100%\", backgroundColor: \"#3490dc\" }}>\r\n            <div style={{width: \"30%\", display: \"flex\", textAlign: \"center\" }}>\r\n                <Sidebar />\r\n            </div>\r\n            <div id={\"ctcTitle\"} style={{width: \"100%\", display: \"flex\", textAlign: \"center\", paddingBottom: \"5px\" }}>\r\n                <div style={{ width: \"80%\" }}>\r\n                    <h4 style={{ margin: \"auto\", marginRight: \"12%\", color: \"whitesmoke\", overflow: \"visible\" }}>Hagrid's Bar n' Grill</h4>\r\n                    <h6 style={{ margin: \"auto\", marginRight: \"10%\", color: \"whitesmoke\", overflow: \"visible\" }}><b>Current User: </b>bill</h6>\r\n                </div>\r\n                <div style={{marginLeft: \"auto\" }}>\r\n                    <div style={{ marginTop: \"7px\", display: \"flex\", textAlign: \"center\" }} >\r\n                        <LinkContainer to=\"/logout\" className={\"active navbar-brand\"} style={{color: \"whitesmoke\"}}>\r\n                            <Nav.Link id=\"logoutButton\" onClick={props.handleLogout}>Logout</Nav.Link>\r\n                        </LinkContainer>\r\n                    </div>\r\n                </div>\r\n                <div >\r\n                    <div style={{ marginTop: \"7px\", display: \"flex\", textAlign: \"center\", marginRight: \"2rem\", marginLeft: \"-5px\" }} onClick={() => clickIcon()}>\r\n                        <BsBellFill style={bellStyle} />\r\n                        <div style={{ cursor: \"pointer\", width: \"30px\", marginLeft: \"-6px\", marginTop: \"-8px\", position: \"absolute\" }}>\r\n                            {indicateNotify()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Dashboard.js",["111","112","113","114","115","116","117","118","119"],"import React, { useEffect, useState } from 'react';\r\nimport {Container, Row, Col, Button, Modal} from 'react-bootstrap';\r\nimport * as Constants from './constants';\r\nimport axios from 'axios';\r\nimport ActivityType from './ActivityType';\r\nexport default function Dashboard(props) {\r\n    const [updates, setUpdates] = useState();\r\n    const [showNotify, setShowNotify] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [details, setDetails] = useState(\"\");\r\n    useEffect(() => {\r\n        getRecentActivity();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setShowNotify(props.showNotify)\r\n    }, [props.showNotify]);\r\n\r\n    function getRecentActivity() {\r\n        axios.get(Constants.URL+`?action=recentUpdates`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setUpdates(res.data);\r\n            })\r\n    }\r\n\r\n    function descriptModal() {\r\n        let modal = [];\r\n        modal.push(\r\n            <Modal size=\"lg\" show={showModal} onHide={() => setShowModal(false)} style={{textAlign: \"center\"}}>\r\n                <div>\r\n                    <p style={{whiteSpace: \"pre-line\"}}>{details}</p>\r\n                </div>\r\n            </Modal>\r\n        );\r\n\r\n        return modal;\r\n    }\r\n\r\n    // let logsButton = [];\r\n    // if (props.currentUser.super_user) {\r\n    //     logsButton.push(\r\n    //         <Button variant=\"primary\" style={{float: \"right\", backgroundColor: \"#3490dc\", height: \"35px\", fontSize: \"14px\"}}>\r\n    //             View Logs\r\n    //         </Button>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n           <h3>Welcome!</h3>\r\n           {/* <img id=\"logo\" src={'../images/myBarLogo.png'}  alt=\"logo\"/> */}\r\n           <div id=\"logo\"></div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Sidebar.js",["120"],"import React from 'react';\r\nimport { elastic as Menu } from 'react-burger-menu';\r\n\r\nexport default props => {\r\n  return (\r\n    <Menu>\r\n      <a className=\"menu-item\" href=\"/home\">\r\n        Home\r\n      </a>\r\n      <a className=\"menu-item\" href=\"/drinks\">\r\n        Drinks\r\n      </a>\r\n    </Menu>\r\n  );\r\n};","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\ActivityType.js",["121","122","123"],"import React, { useEffect, useState } from 'react';\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport TicketTile from './TicketTile';\r\nimport * as Constants from './constants';\r\nimport axios from 'axios';\r\n\r\nexport default function ActivityType(props) {\r\n    const [tickets, setTickets] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getTicketActivity();\r\n    }, []);\r\n\r\n    function getTicketActivity() {\r\n        axios.get(Constants.URL+`?action=getRecentTicketUpdates`)\r\n        .then(res => {\r\n            //console.log(res.data);\r\n            setTickets(res.data);\r\n        })\r\n    }\r\n\r\n    function generateMyActivities() {\r\n        return <h6>No Activities</h6>\r\n    }\r\n\r\n    function navToCreate() {\r\n        history.push(\"/createticket\");\r\n    }\r\n\r\n    function navToView() {\r\n        history.push(\"/viewtickets\");\r\n    }\r\n\r\n    function showTickets() {\r\n        let cards = [];\r\n        if (tickets.length > 0) {\r\n            for(let i = 0; i < tickets.length; i++) {\r\n                cards.push(\r\n                   <Col sm><TicketTile ticket={tickets[i]} fromView={false} /></Col>\r\n                );\r\n            }\r\n        }\r\n        return cards;\r\n    }\r\n\r\n\r\n    function generateTicketButtons() {\r\n        let userActions = [];\r\n        userActions.push(\r\n            <div>\r\n                <Button variant=\"primary\" onClick={() => navToView()} style={{float: \"left\", backgroundColor: \"#3490dc\", height: \"35px\", fontSize: \"14px\", marginRight: \"15px\"}}>\r\n                    View Tickets\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={() => navToCreate()} style={{float: \"left\", backgroundColor: \"#3490dc\", height: \"35px\", fontSize: \"14px\"}}>\r\n                    Create a Ticket\r\n                </Button>\r\n            </div>\r\n        );\r\n        return userActions;\r\n    }\r\n\r\n    return (\r\n        <div style={{overflow: \"auto\"}}>\r\n            <h3 className=\"d-flex justify-content-center\" style={{marginTop: \"25px\"}}></h3>\r\n            <div style={{marginLeft: \"10%\", marginRight: \"10%\", overflow: \"auto\"}}>\r\n            <p style={{marginTop: \"25px\", height: \"20px\", fontSize: \"20px\"}}><b>Recent Ticket Activity</b>\r\n                    </p>\r\n                <div>\r\n                    { generateTicketButtons() }\r\n                </div>\r\n            </div>\r\n            <div style={{overflow: \"auto\"}}>\r\n                <hr style={{marginTop: \"25px\", marginRight: \"7%\", marginLeft: \"7%\", backgroundColor: \"black\"}} />\r\n                <Container>\r\n                    <Row>\r\n                        {showTickets()}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\ToggleButton.js",[],"C:\\Users\\micha\\myBar\\userinterface\\src\\components\\TicketTile.js",["124","125","126"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n// <div style={{borderStyle: \"ridge\", borderColor: \"#D3D3D3\", width: \"150px\", height: \"150px\", marginBottom: \"25px\"}}>User Task</div>\r\nexport default function TicketTile(props) {\r\n    const history = useHistory();\r\n    let assignedTo = \"\"\r\n    if (!props.ticket.assigned_name) {\r\n        assignedTo = \"Not Assigned\";\r\n    } else {\r\n        assignedTo = props.ticket.assigned_name;\r\n    }\r\n    let style = {};\r\n    let ticketPage = window.location.pathname.includes(\"ticket\");\r\n    if (props.fromView) {\r\n        style = { \r\n            width: '32rem', \r\n            height: '20rem', \r\n            marginBottom: '25px',\r\n            backgroundColor: \"whitesmoke\"\r\n        };\r\n    } else {\r\n        if(ticketPage){\r\n            style = { \r\n                width: '90%',  \r\n                maxHeight: '20rem',\r\n                marginBottom: '25px',\r\n                backgroundColor: \"whitesmoke\"\r\n            };\r\n        }\r\n        else{\r\n            style = { \r\n                width: '16rem', \r\n                height: '12rem', \r\n                marginBottom: '25px',\r\n                backgroundColor: \"whitesmoke\"\r\n            }; \r\n        } \r\n    }\r\n\r\n    function navToTicket() {\r\n        history.push(\"/ticket/\"+props.ticket.ticket_number);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    if (!props.fromView) {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\" style={{marginTop: \"25px\"}}>\r\n                <Card onClick={() => navToTicket()} border=\"dark\" key={\"orderrow\"} style={style}>\r\n                        <Card.Header className=\"d-flex justify-content-center\" style={{color: \"#fff\", backgroundColor: \"#3490dc\"}}>\r\n                        <p><b>Issue #</b>{props.ticket.ticket_number}: {props.ticket.title}</p>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <p style={{color: \"black\"}}><b>Status: </b> {props.ticket.status}</p>\r\n                        </Card.Body>\r\n                </Card>\r\n            </div> \r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\" style={{marginTop: \"25px\"}}>\r\n                <Card onClick={() => navToTicket()} border=\"dark\" key={\"orderrow\"} style={style}>\r\n                        <Card.Header className=\"d-flex justify-content-center\" style={{color: \"#fff\", backgroundColor: \"#3490dc\"}}>\r\n                            <p><b>Issue #</b>{props.ticket.ticket_number}: {props.ticket.title}</p>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <p><b>Status: </b> {props.ticket.status}</p>\r\n                            <p><b>Product: </b> {props.ticket.product_description}</p>\r\n                            <p><b>Assign: </b> {assignedTo}</p>\r\n                            <p><b>Created By: </b> {props.ticket.creator_name}</p>\r\n                        </Card.Body>\r\n                </Card>\r\n            </div> \r\n        )  \r\n    }\r\n}","C:\\Users\\micha\\myBar\\userinterface\\src\\components\\Drinks.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useState, useEffect, version } from 'react';\r\nimport axios from 'axios';\r\nimport SearchField from 'react-search-field';\r\n\r\nimport {\r\n    Modal,\r\n    Table,\r\n    Card,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Accordion\r\n} from 'react-bootstrap';\r\nimport * as Constants from './constants';\r\nimport '../styles/logStyles.css';\r\nimport { BiLoader } from \"react-icons/bi\";\r\nimport ToggleButton from './ToggleButton'\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nexport default function Drinks() {\r\n    const [drinks, setContainers] = useState();\r\n    const [containerHistory, setContainerHistory] = useState();\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [selectedFacilityTitle, setSelectedFacilityTitle] = useState('');\r\n    const [flaggedOnly, setFlaggedOnly] = useState(false);\r\n    const onChangeSearch = query => setSearch(query);\r\n\r\n    useEffect(() => {\r\n        getContainers();\r\n        let timer = setInterval(() => getContainers(), 60000);\r\n        return function cleanup() {\r\n            clearInterval(timer);\r\n        }\r\n    }, []);\r\n\r\n    //Populates all facilities and drinks\r\n    function containerRows() {\r\n        let allContainers = [];\r\n        for (let x = 0; x < drinks.length; x++) {\r\n            let rowData = rowDataFunc(drinks[x]);\r\n            let price = drinks[x][\"price\"];\r\n            let actualPrice = (\"$\" + price.substring(0, price.length - 2) + \".\" + price.substring(price.length - 2, price.length))\r\n            let displayTitle = drinks[x][\"title\"] + \" - \" + actualPrice;\r\n            allContainers.push(\r\n                <Card>\r\n                    <Card.Header>\r\n                        <div style={{ backgroundColor: Constants.ctcWhite, cursor: \"pointer\" }}>\r\n                            <Accordion.Toggle as={Card.Header} variant={\"Button\"} eventKey={x + 1}>\r\n                                {displayTitle}\r\n                            </Accordion.Toggle>\r\n                        </div>\r\n                        <Accordion.Collapse eventKey={x + 1}>\r\n                            <Card.Body>\r\n                                <Table responsive>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <th>Ingredients</th>\r\n                                        </tr>\r\n                                        {rowData}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card.Header>\r\n                </Card>\r\n            );\r\n        }\r\n        return allContainers;\r\n    }\r\n\r\n    //Populates specified facility and container(s)\r\n    function containerRowsSpecific() {\r\n        let allContainers = [];\r\n        let gotSearchResults = false;\r\n        for (let x = 0; x < drinks.length; x++) {\r\n            let price = drinks[x][\"price\"];\r\n            let actualPrice = (\"$\" + price.substring(0, price.length - 2) + \".\" + price.substring(price.length - 2, price.length))\r\n            let displayTitle = drinks[x][\"title\"] + \" - \" + actualPrice;\r\n            let active = 1;\r\n            let rowData = rowDataFunc(drinks[x]);\r\n\r\n            if (selectedFacilityTitle !== \"\" && selectedFacilityTitle !== displayTitle) {\r\n                //one result, active stays as 1\r\n                continue;\r\n            }\r\n\r\n            if (flaggedOnly) {\r\n                continue;\r\n            }\r\n\r\n            if (search !== \"\") {\r\n                let oneDimArr = [];\r\n                let parsedDrinks = JSON.parse(drinks[x][\"ingredients\"]);\r\n                for (let i = 0; i < Object.keys(parsedDrinks).length; i++) {\r\n                    oneDimArr = oneDimArr.concat(displayTitle ); //Screw Driver\r\n                    oneDimArr = oneDimArr.concat( Object.keys(parsedDrinks)[i] ); //Vodka\r\n                    oneDimArr = oneDimArr.concat( Object.values(parsedDrinks)[i] ); //1 shot\r\n                }\r\n                console.log(\"arr: \")\r\n                console.log(oneDimArr)\r\n\r\n                let finder = filterList(search, oneDimArr)\r\n                if (finder.length > 0 && !finder.includes(null) && !finder.includes(undefined)) {\r\n                    // rowData = rowDataSpecificFunc(drinks[x], finder);\r\n                    gotSearchResults = true;\r\n                    // active == 1 ? active = 1 : active++;\r\n                } else {\r\n                    // active == 1 ? active = 1 : active--;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            allContainers.push(\r\n                // <Accordion defaultActiveKey={x+1} >\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <div>\r\n                                <Accordion.Toggle as={Card.Header} variant={\"Button\"} eventKey={x+1}>\r\n                                    {displayTitle}\r\n                                </Accordion.Toggle>\r\n                            </div>\r\n                            <Accordion.Collapse eventKey={x+1}>\r\n                                <Card.Body>\r\n                                    <Table responsive>\r\n                                        <tbody id={x + 1}>\r\n                                            <tr>\r\n                                                <th>Ingredients</th>\r\n                                            </tr>\r\n                                            {rowData}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card.Header>\r\n                    </Card>\r\n                // </Accordion>\r\n            );\r\n        }\r\n        if (!gotSearchResults && search !== \"\") {\r\n            allContainers.push(\"No Results Found\")\r\n        }\r\n        return allContainers;\r\n    }\r\n\r\n    //Returns multi-dimension array as Drinks[Container[\r\n    // Item0[\"test\", \"1.2\", \"false\", \"2 days ago\"], Item0[\"test2\", \"1.3\", \"true\", \"3 days ago\"],\r\n    // facility_info[\"facility_id\":\"3186291\", \"facility_name\":\"zCTCFacility\"]]]\r\n    function getContainers() {\r\n        axios.get(Constants.URL + `?action=viewAllContainers`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setContainers(res.data);\r\n            })\r\n    }\r\n\r\n    function getContainerHistory(facilityID, container) {\r\n        let data = { facilityID: facilityID, containerID: container[4] }\r\n        axios.get(Constants.URL + `?action=getContainerHistory&data=` + JSON.stringify(data))\r\n            .then(res => {\r\n                console.log(res);\r\n                res.data[0][4] = container[0]\r\n                res.data[0][5] = container[1]\r\n                console.log(\"here: \")\r\n                console.log(res.data)\r\n                setContainerHistory(res.data)\r\n            })\r\n    }\r\n\r\n    function rowDataFunc(container) {\r\n        let rowData = [];\r\n        // for (let x = 0; x < Object.keys(container).length; x++) {\r\n        // pushRowData(container, x, rowData);\r\n        rowData.push(\r\n            <tr>\r\n                <td><ul>{pushColData(container)}</ul></td>\r\n            </tr>\r\n        )\r\n        // }\r\n        return rowData;\r\n    }\r\n\r\n    function rowDataSpecificFunc(container, data) {\r\n        let rowData = [];\r\n        for (let x = 0; x < Object.values(container).length - 1; x++) {\r\n            if (!findCommonElements2(data, container[x])) {\r\n                continue;\r\n            }\r\n            pushRowData(container, x, rowData);\r\n        }\r\n        return rowData;\r\n    }\r\n\r\n    function pushColData(container) {\r\n        let colData = [];\r\n        // console.log(Object.keys(JSON.parse(container[\"ingredients\"])))\r\n        for (let x = 0; x < Object.keys(JSON.parse(container[\"ingredients\"])).length; x++) {\r\n            colData.push(\r\n                <li>{Object.keys(JSON.parse(container[\"ingredients\"]))[x] + \": \" + Object.values(JSON.parse(container[\"ingredients\"]))[x]}</li>\r\n            );\r\n        }\r\n        return colData;\r\n    }\r\n\r\n    function pushRowData(container, x, rowData) {\r\n\r\n        let style = { cursor: \"pointer\" };\r\n        console.log(typeof container)\r\n        console.log(container)\r\n\r\n\r\n        rowData.push(\r\n            <tr style={style} onClick={() => {\r\n                // setShowResult(true);\r\n                // getContainerHistory(container[\"facility_info\"][\"facility_id\"], container[x]);\r\n                // drawHistoryModal()\r\n            }}>\r\n                <td>{container[x]}</td>\r\n            </tr>\r\n        )\r\n        return rowData\r\n    }\r\n\r\n    function isFacilityAlert() {\r\n        let isFacility = [];\r\n        for (let i = 0; i < drinks.length; i++) {\r\n            let down = false;\r\n            for (let k = 0; k < Object.values(drinks[i]).length - 1; k++) {\r\n                if (drinks[i][k][2] === 'f') {\r\n                    down = true;\r\n                }\r\n            }\r\n            isFacility.push(down);\r\n        }\r\n        return isFacility;\r\n    }\r\n\r\n    //Search Bar Algo\r\n    function filterList(q, list) {\r\n        function escapeRegExp(s) {\r\n            return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\r\n        }\r\n\r\n        const words = q\r\n            .split(/\\s+/g)\r\n            .map(s => s.trim())\r\n            .filter(s => !!s);\r\n\r\n        const hasTrailingSpace = q.endsWith(\" \");\r\n        const searchRegex = new RegExp(\r\n            words\r\n                .map((word, i) => {\r\n                    if (i + 1 == words.length && !hasTrailingSpace) {\r\n                        // The last word - ok with the word being \"startswith\"-like\r\n                        return `(?=.*\\\\b\\\\w*${escapeRegExp(word)})`;\r\n                    } else {\r\n                        // Not the last word - expect the whole word exactly\r\n                        return `(?=.*\\\\b\\\\w*${escapeRegExp(word)}\\\\b)`;\r\n                    }\r\n                })\r\n                .join(\"\") + \".+\",\r\n            \"gi\"\r\n        );\r\n        return list.filter(item => {\r\n            return searchRegex.test(item);\r\n        });\r\n\r\n    }\r\n\r\n    function findCommonElements2(arr1, arr2) {\r\n        // Create an empty object\r\n        let obj = {};\r\n\r\n        // Loop through the first array\r\n        for (let i = 0; i < arr1.length; i++) {\r\n\r\n            // Check if element from first array\r\n            // already exist in object or not\r\n            if (!obj[arr1[i]]) {\r\n\r\n                // If it doesnt exist assign the\r\n                // properties equals to the\r\n                // elements in the array\r\n                const element = arr1[i];\r\n                obj[element] = true;\r\n            }\r\n        }\r\n\r\n        // Loop through the second array\r\n        for (let j = 0; j < arr2.length; j++) {\r\n\r\n            // Check elements from second array exist\r\n            // in the created object or not\r\n            if (obj[arr2[j]]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function findDiff(jsonContainer) {\r\n        let jsonObject1 = JSON.parse(jsonContainer[2]);\r\n        let jsonObject2 = JSON.parse(jsonContainer[3]);\r\n\r\n        if (jsonObject1 == null) { //INSERT\r\n            return (checkForNull(jsonContainer[4]) + \" (Version: \" + checkForNull(jsonContainer[5]) + \")\" +\r\n                \"\\nRunning = \" + checkForNull(jsonObject2[\"running\"]));\r\n        }\r\n        if (jsonObject2 == null) { //DELETE\r\n            return (checkForNull(jsonContainer[4]) + \" (Version: \" + checkForNull(jsonContainer[5]) + \")\" +\r\n                \"\\nRunning = \" + checkForNull(jsonObject2[\"running\"]));\r\n        }\r\n        let keys = Object.keys(jsonObject1);\r\n        for (let i = 0; i < keys.length; i++) { //UPDATE\r\n            let key = keys[i];\r\n            if (jsonObject1[key] !== jsonObject2[key]) {\r\n                if (jsonObject1[key] == true && jsonObject2[key] == false) {\r\n                    return (\"Container Stopped Running\");\r\n                }\r\n                else if (jsonObject1[key] == false && jsonObject2[key] == true) {\r\n                    return (\"Container Started Running\");\r\n                }\r\n                return (key + \" changed from \" + checkForNull(jsonObject1[key]) + \" to \" + checkForNull(jsonObject2[key]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkForNull(obj) {\r\n        if (obj == null) {\r\n            return \"N/A\"\r\n        }\r\n        else { return JSON.stringify(obj) }\r\n    }\r\n\r\n    //Dynamically fill the drop down menu\r\n    function createMenuOptions() {\r\n        let optionsArr = [];\r\n        optionsArr.push(\r\n            <option value={\"\"}>\r\n                Not Set\r\n            </option>\r\n        );\r\n        for (let x = 0; x < drinks.length; x++) {\r\n            optionsArr.push(\r\n                <option\r\n                    value={drinks[x][\"facility_info\"][\"facility_name\"] + ' - ' + drinks[x][\"facility_info\"][\"facility_id\"]}>\r\n                    {drinks[x][\"facility_info\"][\"facility_name\"] + ' - ' + drinks[x][\"facility_info\"][\"facility_id\"]}\r\n                </option>\r\n            );\r\n        }\r\n        return optionsArr\r\n    }\r\n\r\n    function handleCloseResult() {\r\n        setShowResult(false);\r\n    }\r\n\r\n    function drawHistoryModal() {\r\n        let modal = [];\r\n\r\n        modal.push(\r\n            <Modal show={showResult} onHide={() => handleCloseResult()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Container History</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>\r\n                        <Table style={{ margin: \"auto\", width: \"90%\" }}>\r\n                            <thead>\r\n                                <tr style={{ backgroundColor: \"#3490dc\", padding: \"5rem\" }}>\r\n                                    <th style={{ color: \"#fff\" }}><p>Event</p></th>\r\n                                    <th style={{ color: \"#fff\", }}><p>Action</p></th>\r\n                                    <th style={{ color: \"#fff\", }}><p>Date</p></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {pushModalData()}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n\r\n        return modal;\r\n    }\r\n\r\n    function pushModalData() {\r\n        if (containerHistory == null || Object.values(containerHistory).length <= 0) {\r\n            return (<tr>No History</tr>);\r\n        }\r\n        let contents = [];\r\n\r\n        for (let i = 0; i < Object.values(containerHistory).length; i++) {\r\n            let event = containerHistory[i][1];\r\n            if (containerHistory[i][1] === \"INSERT\") {\r\n                event = \"ADDED\"\r\n            }\r\n            if (containerHistory[i][1] === \"DELETE\") {\r\n                event = \"REMOVED\"\r\n            }\r\n            contents.push(\r\n                <tr key={i}>\r\n                    <td>{event}</td>\r\n                    <td style={{ overflowWrap: \"break-word\" }}>{findDiff(containerHistory[i])}</td>\r\n                    <td>{containerHistory[i][0].substring(0, containerHistory[i][0].indexOf(\".\"))}</td>\r\n                </tr>\r\n            );\r\n        }\r\n        return contents\r\n    }\r\n\r\n    if (drinks) {\r\n        return (\r\n            <Container>\r\n            <Row>\r\n                <Col lg={\"5\"}>\r\n                    <h3>Container Status</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={\"8\"}>\r\n                    <div style={{width: \"fit-content\", float: \"left\"}}>\r\n                    <label>\r\n                        Flagged Only\r\n                    </label>\r\n                    <br />\r\n                    <ToggleButton onChange={(e) => setFlaggedOnly(e)} />\r\n                    </div>\r\n                    <SearchField\r\n                        placeholder=\"Search\"\r\n                        value={search}\r\n                        onChange={onChangeSearch}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md={\"1\"}>\r\n                </Col>\r\n\r\n                <Col md={\"3\"}>\r\n                    <select onChange={(e) => setSelectedFacilityTitle(e.target.value)}\r\n                        name=\"FacilityID\" value={selectedFacilityTitle}>\r\n                        {/* {createMenuOptions()} */}\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col lg={\"12\"}>\r\n                    <Accordion defaultActiveKey={0}>\r\n                        {containerRowsSpecific()}\r\n                        {/* {drawHistoryModal()} */}\r\n                    </Accordion>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        )\r\n    } \r\n    else {\r\n        return (\r\n            <Container>\r\n                <div id=\"loadingDiv\" style={{ textAlign: \"center\", marginTop: \"15%\" }}>\r\n                    <BiLoader size=\"250px\" color=\"3498FF\" />\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n","H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\index.js",[],["142","143"],"H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\reportWebVitals.js",[],"H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\App.js",["144"],"H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\Routes.js",["145"],"H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\constants.js",[],"H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\Dashboard.js",["146","147"],"H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\Drinks.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"H:\\SoftwareDev\\dogeToTheMoon\\userinterface\\src\\components\\ToggleButton.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"167","severity":1,"message":"171","line":7,"column":10,"nodeType":"169","messageId":"170","endLine":7,"endColumn":18},{"ruleId":"167","severity":1,"message":"172","line":48,"column":12,"nodeType":"169","messageId":"170","endLine":48,"endColumn":18},{"ruleId":"167","severity":1,"message":"173","line":57,"column":12,"nodeType":"169","messageId":"170","endLine":57,"endColumn":21},{"ruleId":"167","severity":1,"message":"174","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":15},{"ruleId":"167","severity":1,"message":"175","line":13,"column":27,"nodeType":"169","messageId":"170","endLine":13,"endColumn":43},{"ruleId":"176","severity":1,"message":"177","line":17,"column":10,"nodeType":"178","endLine":17,"endColumn":12,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":40,"column":14,"nodeType":"169","messageId":"170","endLine":40,"endColumn":23},{"ruleId":"167","severity":1,"message":"181","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":16},{"ruleId":"167","severity":1,"message":"182","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":15},{"ruleId":"167","severity":1,"message":"183","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":25,"column":19,"nodeType":"186","messageId":"187","endLine":25,"endColumn":21},{"ruleId":"167","severity":1,"message":"188","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"189","line":2,"column":20,"nodeType":"169","messageId":"170","endLine":2,"endColumn":23},{"ruleId":"167","severity":1,"message":"190","line":2,"column":25,"nodeType":"169","messageId":"170","endLine":2,"endColumn":28},{"ruleId":"167","severity":1,"message":"191","line":2,"column":30,"nodeType":"169","messageId":"170","endLine":2,"endColumn":36},{"ruleId":"167","severity":1,"message":"192","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":20},{"ruleId":"167","severity":1,"message":"193","line":7,"column":12,"nodeType":"169","messageId":"170","endLine":7,"endColumn":19},{"ruleId":"167","severity":1,"message":"194","line":8,"column":12,"nodeType":"169","messageId":"170","endLine":8,"endColumn":22},{"ruleId":"167","severity":1,"message":"195","line":10,"column":21,"nodeType":"169","messageId":"170","endLine":10,"endColumn":31},{"ruleId":"167","severity":1,"message":"196","line":27,"column":14,"nodeType":"169","messageId":"170","endLine":27,"endColumn":27},{"ruleId":"197","severity":1,"message":"198","line":4,"column":1,"nodeType":"199","endLine":15,"endColumn":3},{"ruleId":"167","severity":1,"message":"200","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":18},{"ruleId":"167","severity":1,"message":"201","line":24,"column":14,"nodeType":"169","messageId":"170","endLine":24,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":66,"column":13,"nodeType":"204","endLine":66,"endColumn":87},{"ruleId":"167","severity":1,"message":"205","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"206","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"191","line":2,"column":16,"nodeType":"169","messageId":"170","endLine":2,"endColumn":22},{"ruleId":"167","severity":1,"message":"207","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":45},{"ruleId":"167","severity":1,"message":"208","line":18,"column":10,"nodeType":"169","messageId":"170","endLine":18,"endColumn":20},{"ruleId":"167","severity":1,"message":"209","line":18,"column":22,"nodeType":"169","messageId":"170","endLine":18,"endColumn":26},{"ruleId":"167","severity":1,"message":"210","line":38,"column":14,"nodeType":"169","messageId":"170","endLine":38,"endColumn":27},{"ruleId":"167","severity":1,"message":"211","line":80,"column":17,"nodeType":"169","messageId":"170","endLine":80,"endColumn":23},{"ruleId":"167","severity":1,"message":"212","line":157,"column":14,"nodeType":"169","messageId":"170","endLine":157,"endColumn":33},{"ruleId":"167","severity":1,"message":"213","line":183,"column":14,"nodeType":"169","messageId":"170","endLine":183,"endColumn":33},{"ruleId":"167","severity":1,"message":"214","line":224,"column":14,"nodeType":"169","messageId":"170","endLine":224,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":253,"column":31,"nodeType":"186","messageId":"187","endLine":253,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":317,"column":38,"nodeType":"186","messageId":"187","endLine":317,"endColumn":40},{"ruleId":"184","severity":1,"message":"185","line":317,"column":66,"nodeType":"186","messageId":"187","endLine":317,"endColumn":68},{"ruleId":"184","severity":1,"message":"185","line":320,"column":43,"nodeType":"186","messageId":"187","endLine":320,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":320,"column":72,"nodeType":"186","messageId":"187","endLine":320,"endColumn":74},{"ruleId":"167","severity":1,"message":"215","line":336,"column":14,"nodeType":"169","messageId":"170","endLine":336,"endColumn":31},{"ruleId":"167","severity":1,"message":"216","line":358,"column":14,"nodeType":"169","messageId":"170","endLine":358,"endColumn":30},{"ruleId":"163","replacedBy":"217"},{"ruleId":"165","replacedBy":"218"},{"ruleId":"167","severity":1,"message":"205","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"206","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"205","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"206","line":1,"column":28,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"207","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":45},{"ruleId":"167","severity":1,"message":"208","line":18,"column":10,"nodeType":"169","messageId":"170","endLine":18,"endColumn":20},{"ruleId":"167","severity":1,"message":"209","line":18,"column":22,"nodeType":"169","messageId":"170","endLine":18,"endColumn":26},{"ruleId":"167","severity":1,"message":"210","line":38,"column":14,"nodeType":"169","messageId":"170","endLine":38,"endColumn":27},{"ruleId":"167","severity":1,"message":"211","line":80,"column":17,"nodeType":"169","messageId":"170","endLine":80,"endColumn":23},{"ruleId":"167","severity":1,"message":"212","line":157,"column":14,"nodeType":"169","messageId":"170","endLine":157,"endColumn":33},{"ruleId":"167","severity":1,"message":"213","line":183,"column":14,"nodeType":"169","messageId":"170","endLine":183,"endColumn":33},{"ruleId":"167","severity":1,"message":"214","line":224,"column":14,"nodeType":"169","messageId":"170","endLine":224,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":253,"column":31,"nodeType":"186","messageId":"187","endLine":253,"endColumn":33},{"ruleId":"184","severity":1,"message":"185","line":317,"column":38,"nodeType":"186","messageId":"187","endLine":317,"endColumn":40},{"ruleId":"184","severity":1,"message":"185","line":317,"column":66,"nodeType":"186","messageId":"187","endLine":317,"endColumn":68},{"ruleId":"184","severity":1,"message":"185","line":320,"column":43,"nodeType":"186","messageId":"187","endLine":320,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":320,"column":72,"nodeType":"186","messageId":"187","endLine":320,"endColumn":74},{"ruleId":"167","severity":1,"message":"215","line":336,"column":14,"nodeType":"169","messageId":"170","endLine":336,"endColumn":31},{"ruleId":"167","severity":1,"message":"216","line":358,"column":14,"nodeType":"169","messageId":"170","endLine":358,"endColumn":30},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'loggedIn' is assigned a value but never used.","'Logout' is defined but never used.","'userLogin' is defined but never used.","'Modal' is defined but never used.","'setNotifications' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["221"],"'hideModal' is defined but never used.","'Navbar' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'ActivityType' is defined but never used.","'updates' is assigned a value but never used.","'showNotify' is assigned a value but never used.","'setDetails' is assigned a value but never used.","'descriptModal' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Redirect' is defined but never used.","'generateMyActivities' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'version' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","'containerRows' is defined but never used.","'active' is assigned a value but never used.","'getContainerHistory' is defined but never used.","'rowDataSpecificFunc' is defined but never used.","'isFacilityAlert' is defined but never used.","'createMenuOptions' is defined but never used.","'drawHistoryModal' is defined but never used.",["219"],["220"],"no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},"Update the dependencies array to be: [props]",{"range":"224","text":"225"},[590,592],"[props]"]